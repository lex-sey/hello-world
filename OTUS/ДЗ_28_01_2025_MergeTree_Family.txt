#ДЗ 28.01.2025
# MergeTree Family 
# Ответ 1  ReplacingMergeTree
# Проверка
CREATE TABLE tbl1
(
    UserID UInt64,
    PageViews UInt8,
    Duration UInt8,
    Sign Int8,
    Version UInt8
)
ENGINE = ReplacingMergeTree
ORDER BY UserID;

INSERT INTO tbl1 VALUES (4324182021466249494, 5, 146, -1, 1);
INSERT INTO tbl1 VALUES (4324182021466249494, 5, 146, 1, 1),(4324182021466249494, 6, 185, 1, 2);

SELECT * FROM tbl1;

			SELECT *
			FROM tbl1

			Query id: 186e39d8-536c-4dec-8abd-a52dfd235a19

			   ┌──────────────UserID─┬─PageViews─┬─Duration─┬─Sign─┬─Version─┐
			1. │ 4324182021466249494 │         5 │      146 │    1 │       1 │
			2. │ 4324182021466249494 │         6 │      185 │    1 │       2 │
			3. │ 4324182021466249494 │         5 │      146 │   -1 │       1 │
			   └─────────────────────┴───────────┴──────────┴──────┴─────────┘

scylla3 :) SELECT * FROM tbl1 final;

SELECT *
FROM tbl1
FINAL

Query id: 4e9a6cbd-17db-40a8-b843-2ad59c8e1cb1

   ┌──────────────UserID─┬─PageViews─┬─Duration─┬─Sign─┬─Version─┐
1. │ 4324182021466249494 │         6 │      185 │    1 │       2 │
   └─────────────────────┴───────────┴──────────┴──────┴─────────┘

1 row in set. Elapsed: 0.003 sec.

# Такой же результат select final можно получить при  использовании движка CollapsingMergeTree(Sign)
# Ошибка создания. Имена полей в ENGINE регистрозависимые. Sign необходимо писать с большой буквы.

CREATE TABLE tbl7
(
    UserID UInt64,
    PageViews UInt8,
    Duration UInt8,
    Sign Int8,
    Version UInt8
)
ENGINE = CollapsingMergeTree(Sign)
ORDER BY UserID;


INSERT INTO tbl7 VALUES (4324182021466249494, 5, 146, -1, 1);
INSERT INTO tbl7 VALUES (4324182021466249494, 5, 146, 1, 1),(4324182021466249494, 6, 185, 1, 2);

# первая  вставка перезаписалась второй вставкой
SELECT * FROM tbl7 

			Query id: 92bd5205-ae59-4197-9b9c-aa9eb78f1f9a

			   ┌──────────────UserID─┬─PageViews─┬─Duration─┬─Sign─┬─Version─┐
			1. │ 4324182021466249494 │         6 │      185 │    1 │       2 │
			2. │ 4324182021466249494 │         5 │      146 │   -1 │       1 │
			   └─────────────────────┴───────────┴──────────┴──────┴─────────┘

			2 rows in set. Elapsed: 0.004 sec.

# Но при указании FINAL получим тот же результат. Записи для одного UserID (ключ сортировки) удалятся если у них разный Sign
# Но насколько я понял так же могла удалится и другая строка (любая где sign 1)

SELECT * FROM tbl7 FINAL;

			Query id: f2278c5f-d937-48fd-a124-750146b9cce4

			   ┌──────────────UserID─┬─PageViews─┬─Duration─┬─Sign─┬─Version─┐
			1. │ 4324182021466249494 │         6 │      185 │    1 │       2 │
			   └─────────────────────┴───────────┴──────────┴──────┴─────────┘

			1 row in set. Elapsed: 0.007 sec.









# Ответ 2 SummingMergeTree
# проверка

CREATE TABLE tbl2
(
    key UInt32,
    value UInt32
)
ENGINE = SummingMergeTree(value)
ORDER BY key;

INSERT INTO tbl2 Values(1,1),(1,2),(2,1);


SELECT *
FROM tbl2

Query id: aecedcd6-3930-40c3-914a-8197a06a8adc

   ┌─key─┬─value─┐
1. │   1 │     3 │
2. │   2 │     1 │
   └─────┴───────┘

# Ответ 3 ReplacingMergeTree
# Проверка
CREATE TABLE tbl3
(
    `id` Int32,
    `status` String,
    `price` String,
    `comment` String
)
ENGINE = ReplacingMergeTree
PRIMARY KEY (id)
ORDER BY (id, status);


INSERT INTO tbl3 VALUES (23, 'success', '1000', 'Confirmed');
INSERT INTO tbl3 VALUES (23, 'success', '2000', 'Cancelled'); 

SELECT *
FROM tbl3

			Query id: 25410c42-c384-4f48-9286-5cb37a017cf7

			   ┌─id─┬─status──┬─price─┬─comment───┐
			1. │ 23 │ success │ 2000  │ Cancelled │
			2. │ 23 │ success │ 1000  │ Confirmed │
			   └────┴─────────┴───────┴───────────┘

			2 rows in set. Elapsed: 0.008 sec.

select * from tbl3 final;

			SELECT *
			FROM tbl3
			FINAL

			Query id: 221d768d-7ce0-41df-889b-2e0d059379af

			   ┌─id─┬─status──┬─price─┬─comment───┐
			1. │ 23 │ success │ 2000  │ Cancelled │
			   └────┴─────────┴───────┴───────────┘

			1 row in set. Elapsed: 0.011 sec.


# Ответ 4 
# для tbl4 MergeTree
# для tbl5 AggregatingMergeTree

# Проверка

CREATE TABLE tbl4
(   CounterID UInt8,
    StartDate Date,
    UserID UInt64
) ENGINE = MergeTree
PARTITION BY toYYYYMM(StartDate) 
ORDER BY (CounterID, StartDate);

INSERT INTO tbl4 VALUES(0, '2019-11-11', 1);
INSERT INTO tbl4 VALUES(1, '2019-11-12', 1);

CREATE TABLE tbl5
(   CounterID UInt8,
    StartDate Date,
    UserID AggregateFunction(uniq, UInt64)
) ENGINE = AggregatingMergeTree
PARTITION BY toYYYYMM(StartDate) 
ORDER BY (CounterID, StartDate);

INSERT INTO tbl5
select CounterID, StartDate, uniqState(UserID)
from tbl4
group by CounterID, StartDate;

INSERT INTO tbl5 VALUES (1,'2019-11-12',1);

			INSERT INTO tbl5 FORMAT Values

			Query id: 83180aa8-cd65-4a29-8e15-f4304d25caef

			Ok.
			Error on processing query: Code: 53. DB::Exception: Cannot convert UInt64 to AggregateFunction(uniq, UInt64): While executing ValuesBlockInputFormat: data for INSERT was parsed from query. (TYPE_MISMATCH) (version 25.1.4.53 (official build))

SELECT uniqMerge(UserID) AS state
FROM tbl5
GROUP BY
    CounterID,
    StartDate

			Query id: f8e4f38d-2887-48c0-8e9a-08abf68b17cf

			   ┌─state─┐
			1. │     1 │
			2. │     1 │
			   └───────┘

			2 rows in set. Elapsed: 0.003 sec.



# Ответ 

CREATE TABLE tbl6
(
    `id` Int32,
    `status` String,
    `price` String,
    `comment` String,
    `sign` Int8
)
ENGINE = CollapsingMergeTree(sign)
PRIMARY KEY (id)
ORDER BY (id, status);

INSERT INTO tbl6 VALUES (23, 'success', '1000', 'Confirmed', 1);
INSERT INTO tbl6 VALUES (23, 'success', '1000', 'Confirmed', -1), (23, 'success', '2000', 'Cancelled', 1);

SELECT *FROM tbl6;

			Query id: 7eacf078-54a5-428a-b0f9-1aa63052795b

			   ┌─id─┬─status──┬─price─┬─comment───┬─sign─┐
			1. │ 23 │ success │ 1000  │ Confirmed │   -1 │
			2. │ 23 │ success │ 2000  │ Cancelled │    1 │
			3. │ 23 │ success │ 1000  │ Confirmed │    1 │
			   └────┴─────────┴───────┴───────────┴──────┘

			3 rows in set. Elapsed: 0.004 sec.

SELECT * FROM tbl6 FINAL;

			Query id: 80ce6f84-496c-487b-bad5-8a90c15524bf

			   ┌─id─┬─status──┬─price─┬─comment───┬─sign─┐
			1. │ 23 │ success │ 2000  │ Cancelled │    1 │
			   └────┴─────────┴───────┴───────────┴──────┘

			1 row in set. Elapsed: 0.004 sec.


